<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="18" failed="19" ignored="100" total="173" passed="36">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="199331" started-at="2021-04-06T09:42:10Z" finished-at="2021-04-06T09:45:29Z">
    <groups>
    </groups>
    <test name="API Test" duration-ms="199331" started-at="2021-04-06T09:42:10Z" finished-at="2021-04-06T09:45:29Z">
      <class name="TestCases.Send_OTP">
        <test-method status="PASS" signature="setup()[pri:0, instance:TestCases.Send_OTP@77b14724]" name="setup" is-config="true" duration-ms="166" started-at="2021-04-06T15:12:09Z" finished-at="2021-04-06T15:12:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="configure()[pri:0, instance:TestCases.Send_OTP@77b14724]" name="configure" is-config="true" duration-ms="552" started-at="2021-04-06T15:12:09Z" depends-on-methods="com.MSIL.Setup.BaseSetup.setup" finished-at="2021-04-06T15:12:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configure -->
        <test-method status="PASS" signature="beforeTest(java.lang.String)[pri:0, instance:TestCases.Send_OTP@77b14724]" name="beforeTest" is-config="true" duration-ms="6" started-at="2021-04-06T15:12:10Z" finished-at="2021-04-06T15:12:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[QA]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforClass()[pri:0, instance:TestCases.Send_OTP@77b14724]" name="beforClass" is-config="true" duration-ms="4" started-at="2021-04-06T15:12:10Z" finished-at="2021-04-06T15:12:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestCases.Send_OTP@77b14724]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2021-04-06T15:12:10Z" finished-at="2021-04-06T15:12:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="s_otp(java.util.Hashtable)[pri:0, instance:TestCases.Send_OTP@77b14724]" name="s_otp" duration-ms="2967" started-at="2021-04-06T15:12:10Z" data-provider="dp" finished-at="2021-04-06T15:12:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{mobileNo=, appId=4.0, endpoint=qa/sendotp}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- s_otp -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:TestCases.Send_OTP@77b14724]" name="afterMethod" is-config="true" duration-ms="448" started-at="2021-04-06T15:12:13Z" finished-at="2021-04-06T15:12:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:TestCases.Send_OTP@77b14724]" name="afterSuite" is-config="true" duration-ms="0" started-at="2021-04-06T15:15:29Z" finished-at="2021-04-06T15:15:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- TestCases.Send_OTP -->
      <class name="TestCases.Customer_Exists">
        <test-method status="PASS" signature="beforClass()[pri:0, instance:TestCases.Customer_Exists@30b19518]" name="beforClass" is-config="true" duration-ms="0" started-at="2021-04-06T15:13:55Z" finished-at="2021-04-06T15:13:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestCases.Customer_Exists@30b19518]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2021-04-06T15:13:55Z" finished-at="2021-04-06T15:13:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="customer_exists(java.util.Hashtable, org.testng.ITestContext)[pri:0, instance:TestCases.Customer_Exists@30b19518]" name="customer_exists" duration-ms="556" started-at="2021-04-06T15:13:55Z" data-provider="dp" finished-at="2021-04-06T15:13:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{mobile=9669483959, expectedMessage=, expectedErrorCode=200, endpoint=qa/customer/api/v1/exists}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@7dee835]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- customer_exists -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:TestCases.Customer_Exists@30b19518]" name="afterMethod" is-config="true" duration-ms="41" started-at="2021-04-06T15:13:56Z" finished-at="2021-04-06T15:13:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestCases.Customer_Exists@30b19518]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2021-04-06T15:13:56Z" finished-at="2021-04-06T15:13:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="invalid_customer_exists(java.util.Hashtable, org.testng.ITestContext)[pri:0, instance:TestCases.Customer_Exists@30b19518]" name="invalid_customer_exists" duration-ms="501" started-at="2021-04-06T15:13:56Z" data-provider="dp" finished-at="2021-04-06T15:13:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{mobile=, expectedMessage=Please provide valid mobile, expectedErrorCode=400, endpoint=qa/customer/api/v1/exists}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@7dee835]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalid_customer_exists -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:TestCases.Customer_Exists@30b19518]" name="afterMethod" is-config="true" duration-ms="28" started-at="2021-04-06T15:13:56Z" finished-at="2021-04-06T15:13:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestCases.Customer_Exists@30b19518]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2021-04-06T15:13:56Z" finished-at="2021-04-06T15:13:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="invalid_customer_exists(java.util.Hashtable, org.testng.ITestContext)[pri:0, instance:TestCases.Customer_Exists@30b19518]" name="invalid_customer_exists" duration-ms="497" started-at="2021-04-06T15:13:56Z" data-provider="dp" finished-at="2021-04-06T15:13:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{mobile=12345, expectedMessage=Please provide valid mobile, expectedErrorCode=400, endpoint=qa/customer/api/v1/exists}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@7dee835]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalid_customer_exists -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:TestCases.Customer_Exists@30b19518]" name="afterMethod" is-config="true" duration-ms="29" started-at="2021-04-06T15:13:57Z" finished-at="2021-04-06T15:13:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="invalid_customer_exists(java.util.Hashtable, org.testng.ITestContext)[pri:0, instance:TestCases.Customer_Exists@30b19518]" name="invalid_customer_exists" duration-ms="556" started-at="2021-04-06T15:13:57Z" data-provider="dp" finished-at="2021-04-06T15:13:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{mobile=9111111111, expectedMessage=Customer not exists., expectedErrorCode=400, endpoint=qa/customer/api/v1/exists}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@7dee835]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalid_customer_exists -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestCases.Customer_Exists@30b19518]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2021-04-06T15:13:57Z" finished-at="2021-04-06T15:13:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:TestCases.Customer_Exists@30b19518]" name="afterMethod" is-config="true" duration-ms="33" started-at="2021-04-06T15:13:57Z" finished-at="2021-04-06T15:13:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- TestCases.Customer_Exists -->
      <class name="TestCases.All_Master_Generic_API">
        <test-method status="PASS" signature="beforClass()[pri:0, instance:TestCases.All_Master_Generic_API@366ac49b]" name="beforClass" is-config="true" duration-ms="1" started-at="2021-04-06T15:15:06Z" finished-at="2021-04-06T15:15:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestCases.All_Master_Generic_API@366ac49b]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2021-04-06T15:15:06Z" finished-at="2021-04-06T15:15:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="all_master_generic_api(java.util.Hashtable, org.testng.ITestContext)[pri:0, instance:TestCases.All_Master_Generic_API@366ac49b]" name="all_master_generic_api" duration-ms="601" started-at="2021-04-06T15:15:06Z" data-provider="dp" finished-at="2021-04-06T15:15:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{expectedErrorCode=200, variant=true, color=true, transmissionType=true, channelType=true, model=true, registrationType=true, expectedMessage=, bodyType=true, fuelType=true, endpoint=qa/api/subscribe/vehicle/vehicle-attributes-master}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@7dee835]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- all_master_generic_api -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:TestCases.All_Master_Generic_API@366ac49b]" name="afterMethod" is-config="true" duration-ms="26" started-at="2021-04-06T15:15:07Z" finished-at="2021-04-06T15:15:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- TestCases.All_Master_Generic_API -->
      <class name="TestCases.WhiteList_Ref_isHybrid_TC">
        <test-method status="PASS" signature="beforClass()[pri:0, instance:TestCases.WhiteList_Ref_isHybrid_TC@34cdeda2]" name="beforClass" is-config="true" duration-ms="0" started-at="2021-04-06T15:15:25Z" finished-at="2021-04-06T15:15:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestCases.WhiteList_Ref_isHybrid_TC@34cdeda2]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2021-04-06T15:15:25Z" finished-at="2021-04-06T15:15:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="Whitelist_Ref_ishybrid(java.util.Hashtable, org.testng.ITestContext)[pri:0, instance:TestCases.WhiteList_Ref_isHybrid_TC@34cdeda2]" name="Whitelist_Ref_ishybrid" duration-ms="1565" started-at="2021-04-06T15:15:25Z" data-provider="dp" finished-at="2021-04-06T15:15:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{colorsRequired=true, bodyTypes=, expectedErrorCode=200, channelTypesRequired=false, channelTypes=, resolution=xxhdpi, colorCodes=, enginTypesRequired=false, transmissionTypesRequired=false, modelCodes=BA, enginTypes=, expectedMessage=, fuelTypesRequired=false, variantCodes=BAA4CZ1, endpoint=qa/api/subscribe/vehicle/whitelists/model-variant, bodyTypesRequired=false}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@7dee835]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Whitelist_Ref_ishybrid -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:TestCases.WhiteList_Ref_isHybrid_TC@34cdeda2]" name="afterMethod" is-config="true" duration-ms="40" started-at="2021-04-06T15:15:27Z" finished-at="2021-04-06T15:15:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- TestCases.WhiteList_Ref_isHybrid_TC -->
      <class name="TestCases.Add_Customer_Address">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestCases.Add_Customer_Address@663411de]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2021-04-06T15:15:14Z" finished-at="2021-04-06T15:15:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="add_customer_address(java.util.Hashtable, org.testng.ITestContext)[pri:0, instance:TestCases.Add_Customer_Address@663411de]" name="add_customer_address" duration-ms="1158" started-at="2021-04-06T15:15:14Z" data-provider="dp" finished-at="2021-04-06T15:15:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{addressLine3=behind batta, addressLine2=vikranth shastri marg1, addressLine1=H.no-1, addressType=WORK, addressCategory=BILLING, state=UP, endpoint=/qa/customer/api/v1/customer-address, expectedMessage=Addresses added successfully, gstNumber=gst09875456789, longitude=76.3, pincode=767, expectedErrorCode=201, dmsCityCode=ND, latitude=23.90, city=Noida, area=gandhi road, standard=true, cibilStateCode=CUP}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@7dee835]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- add_customer_address -->
        <test-method status="PASS" signature="beforClass()[pri:0, instance:TestCases.Add_Customer_Address@663411de]" name="beforClass" is-config="true" duration-ms="0" started-at="2021-04-06T15:15:14Z" finished-at="2021-04-06T15:15:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforClass -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:TestCases.Add_Customer_Address@663411de]" name="afterMethod" is-config="true" duration-ms="33" started-at="2021-04-06T15:15:15Z" finished-at="2021-04-06T15:15:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- TestCases.Add_Customer_Address -->
      <class name="TestCases.City_Master_Number_Plate_TC">
        <test-method status="PASS" signature="beforClass()[pri:0, instance:TestCases.City_Master_Number_Plate_TC@9ef8eb7]" name="beforClass" is-config="true" duration-ms="0" started-at="2021-04-06T15:15:24Z" finished-at="2021-04-06T15:15:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforClass -->
        <test-method status="PASS" signature="city_master(java.util.Hashtable, org.testng.ITestContext)[pri:0, instance:TestCases.City_Master_Number_Plate_TC@9ef8eb7]" name="city_master" duration-ms="603" started-at="2021-04-06T15:15:24Z" data-provider="dp" finished-at="2021-04-06T15:15:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{isNew=true, currentDate=null, expectedMessage=, expectedErrorCode=200, regType=WHITE_PLATE, isFuture=false, endpoint=qa/api/common/city-list, cityId=1}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@7dee835]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- city_master -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestCases.City_Master_Number_Plate_TC@9ef8eb7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2021-04-06T15:15:24Z" finished-at="2021-04-06T15:15:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:TestCases.City_Master_Number_Plate_TC@9ef8eb7]" name="afterMethod" is-config="true" duration-ms="36" started-at="2021-04-06T15:15:25Z" finished-at="2021-04-06T15:15:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- TestCases.City_Master_Number_Plate_TC -->
      <class name="TestCases.Common_Cust_Verify_Otp">
        <test-method status="PASS" signature="beforClass()[pri:0, instance:TestCases.Common_Cust_Verify_Otp@1d3ac898]" name="beforClass" is-config="true" duration-ms="0" started-at="2021-04-06T15:13:11Z" finished-at="2021-04-06T15:13:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestCases.Common_Cust_Verify_Otp@1d3ac898]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2021-04-06T15:13:11Z" finished-at="2021-04-06T15:13:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="customer_verify_otp(java.util.Hashtable, org.testng.ITestContext)[pri:0, instance:TestCases.Common_Cust_Verify_Otp@1d3ac898]" name="customer_verify_otp" duration-ms="955" started-at="2021-04-06T15:13:11Z" data-provider="dp" finished-at="2021-04-06T15:13:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{contactInfo=1, expectedMessage=null, otp=1, expectedErrorCode=200, endpoint=qa/customer/api/v1/otp/verify}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@7dee835]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- customer_verify_otp -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:TestCases.Common_Cust_Verify_Otp@1d3ac898]" name="afterMethod" is-config="true" duration-ms="44" started-at="2021-04-06T15:13:12Z" finished-at="2021-04-06T15:13:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- TestCases.Common_Cust_Verify_Otp -->
      <class name="TestCases.CustomerAddressGet">
        <test-method status="PASS" signature="beforClass()[pri:0, instance:TestCases.CustomerAddressGet@63dd899]" name="beforClass" is-config="true" duration-ms="0" started-at="2021-04-06T15:15:15Z" finished-at="2021-04-06T15:15:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestCases.CustomerAddressGet@63dd899]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2021-04-06T15:15:15Z" finished-at="2021-04-06T15:15:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="get_customer_address(java.util.Hashtable, org.testng.ITestContext)[pri:0, instance:TestCases.CustomerAddressGet@63dd899]" name="get_customer_address" duration-ms="3425" started-at="2021-04-06T15:15:15Z" data-provider="dp" finished-at="2021-04-06T15:15:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{expectedMessage=, expectedErrorCode=200, endpoint=/qa/customer/api/v1/customer-address/}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@7dee835]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- get_customer_address -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:TestCases.CustomerAddressGet@63dd899]" name="afterMethod" is-config="true" duration-ms="26" started-at="2021-04-06T15:15:18Z" finished-at="2021-04-06T15:15:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- TestCases.CustomerAddressGet -->
      <class name="TestCases.generateToken">
        <test-method status="PASS" signature="beforClass()[pri:0, instance:TestCases.generateToken@1e8ce150]" name="beforClass" is-config="true" duration-ms="0" started-at="2021-04-06T15:12:13Z" finished-at="2021-04-06T15:12:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestCases.generateToken@1e8ce150]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2021-04-06T15:12:13Z" finished-at="2021-04-06T15:12:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="gen_auth_token(java.util.Hashtable, org.testng.ITestContext)[pri:0, instance:TestCases.generateToken@1e8ce150]" name="gen_auth_token" duration-ms="3868" started-at="2021-04-06T15:12:13Z" data-provider="dp" finished-at="2021-04-06T15:12:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{mobileNo=9686316676, otp=, appId=4, endpoint=qa/api/account/otp/authtoken}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@7dee835]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gen_auth_token -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:TestCases.generateToken@1e8ce150]" name="afterMethod" is-config="true" duration-ms="54" started-at="2021-04-06T15:12:17Z" finished-at="2021-04-06T15:12:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- TestCases.generateToken -->
      <class name="TestCases.Get_Customer_Details">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestCases.Get_Customer_Details@363042d7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2021-04-06T15:13:57Z" finished-at="2021-04-06T15:13:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforClass()[pri:0, instance:TestCases.Get_Customer_Details@363042d7]" name="beforClass" is-config="true" duration-ms="0" started-at="2021-04-06T15:13:57Z" finished-at="2021-04-06T15:13:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforClass -->
        <test-method status="PASS" signature="get_customer_details(java.util.Hashtable, org.testng.ITestContext)[pri:0, instance:TestCases.Get_Customer_Details@363042d7]" name="get_customer_details" duration-ms="68682" started-at="2021-04-06T15:13:57Z" data-provider="dp" finished-at="2021-04-06T15:15:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{expectedMessage=, expectedErrorCode=200, endpoint=qa/customer/api/v1/user/details}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@7dee835]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- get_customer_details -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:TestCases.Get_Customer_Details@363042d7]" name="afterMethod" is-config="true" duration-ms="25" started-at="2021-04-06T15:15:06Z" finished-at="2021-04-06T15:15:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- TestCases.Get_Customer_Details -->
      <class name="TestCases.Customer_Registartion">
        <test-method status="PASS" signature="beforClass()[pri:0, instance:TestCases.Customer_Registartion@628c4ac0]" name="beforClass" is-config="true" duration-ms="0" started-at="2021-04-06T15:13:32Z" finished-at="2021-04-06T15:13:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestCases.Customer_Registartion@628c4ac0]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2021-04-06T15:13:32Z" finished-at="2021-04-06T15:13:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="customer_registration(java.util.Hashtable, org.testng.ITestContext)[pri:0, instance:TestCases.Customer_Registartion@628c4ac0]" name="customer_registration" duration-ms="598" started-at="2021-04-06T15:13:32Z" data-provider="dp" finished-at="2021-04-06T15:13:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{mobile=1, businessType=SUBSCRIBE, referralCode=, expectedErrorCode=201.0, referredBy=, occupationTypeCode=SELF, middleName=Kumar, email=gurender.kush@nagarro.com, expectedMessage=Customer successfully registered, gender=, dob=, firstName=Gurender, lastName=Kush, endpoint=qa/customer/api/v1/register}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@7dee835]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- customer_registration -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:TestCases.Customer_Registartion@628c4ac0]" name="afterMethod" is-config="true" duration-ms="51" started-at="2021-04-06T15:13:32Z" finished-at="2021-04-06T15:13:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="customer_registration(java.util.Hashtable, org.testng.ITestContext)[pri:0, instance:TestCases.Customer_Registartion@628c4ac0]" name="customer_registration" duration-ms="1865" started-at="2021-04-06T15:13:32Z" data-provider="dp" finished-at="2021-04-06T15:13:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{mobile=1, businessType=SUBSCRIBE, referralCode=, expectedErrorCode=201.0, referredBy=, occupationTypeCode=SELF, middleName=Kumar, email=, expectedMessage=Customer successfully registered, gender=, dob=, firstName=Gurender, lastName=Kush, endpoint=qa/customer/api/v1/register}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@7dee835]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- customer_registration -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestCases.Customer_Registartion@628c4ac0]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2021-04-06T15:13:32Z" finished-at="2021-04-06T15:13:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:TestCases.Customer_Registartion@628c4ac0]" name="afterMethod" is-config="true" duration-ms="52" started-at="2021-04-06T15:13:34Z" finished-at="2021-04-06T15:13:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestCases.Customer_Registartion@628c4ac0]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2021-04-06T15:13:34Z" finished-at="2021-04-06T15:13:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="customer_registration(java.util.Hashtable, org.testng.ITestContext)[pri:0, instance:TestCases.Customer_Registartion@628c4ac0]" name="customer_registration" duration-ms="965" started-at="2021-04-06T15:13:34Z" data-provider="dp" finished-at="2021-04-06T15:13:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{mobile=1, businessType=SUBSCRIBE, referralCode=, expectedErrorCode=201.0, referredBy=, occupationTypeCode=, middleName=Kumar, email=gurender.kush@nagarro.com, expectedMessage=Customer successfully registered, gender=, dob=, firstName=Gurender, lastName=Kush, endpoint=qa/customer/api/v1/register}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@7dee835]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- customer_registration -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:TestCases.Customer_Registartion@628c4ac0]" name="afterMethod" is-config="true" duration-ms="51" started-at="2021-04-06T15:13:35Z" finished-at="2021-04-06T15:13:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestCases.Customer_Registartion@628c4ac0]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2021-04-06T15:13:35Z" finished-at="2021-04-06T15:13:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="customer_registration(java.util.Hashtable, org.testng.ITestContext)[pri:0, instance:TestCases.Customer_Registartion@628c4ac0]" name="customer_registration" duration-ms="926" started-at="2021-04-06T15:13:35Z" data-provider="dp" finished-at="2021-04-06T15:13:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{mobile=1, businessType=SUBSCRIBE, referralCode=, expectedErrorCode=201.0, referredBy=, occupationTypeCode=SELF, middleName=Kumar, email=gurender.kush@nagarro.com, expectedMessage=Customer successfully registered, gender=M, dob=1983-10-26, firstName=Gurender, lastName=Kush, endpoint=qa/customer/api/v1/register}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@7dee835]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- customer_registration -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:TestCases.Customer_Registartion@628c4ac0]" name="afterMethod" is-config="true" duration-ms="61" started-at="2021-04-06T15:13:36Z" finished-at="2021-04-06T15:13:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="customer_registration(java.util.Hashtable, org.testng.ITestContext)[pri:0, instance:TestCases.Customer_Registartion@628c4ac0]" name="customer_registration" duration-ms="1714" started-at="2021-04-06T15:13:36Z" data-provider="dp" finished-at="2021-04-06T15:13:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{mobile=1, businessType=SUBSCRIBE, referralCode=, expectedErrorCode=201.0, referredBy=, occupationTypeCode=SELF, middleName=Kumar, email=   gurender.kush@nagarro.com, expectedMessage=Customer successfully registered, gender=, dob=1983-10-26, firstName=Gurender, lastName=Kush, endpoint=qa/customer/api/v1/register}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@7dee835]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- customer_registration -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestCases.Customer_Registartion@628c4ac0]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2021-04-06T15:13:36Z" finished-at="2021-04-06T15:13:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:TestCases.Customer_Registartion@628c4ac0]" name="afterMethod" is-config="true" duration-ms="34" started-at="2021-04-06T15:13:38Z" finished-at="2021-04-06T15:13:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestCases.Customer_Registartion@628c4ac0]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2021-04-06T15:13:38Z" finished-at="2021-04-06T15:13:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="customer_registration(java.util.Hashtable, org.testng.ITestContext)[pri:0, instance:TestCases.Customer_Registartion@628c4ac0]" name="customer_registration" duration-ms="1910" started-at="2021-04-06T15:13:38Z" data-provider="dp" finished-at="2021-04-06T15:13:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{mobile=1, businessType=SUBSCRIBE, referralCode=, expectedErrorCode=201.0, referredBy=, occupationTypeCode=SELF, middleName=Kumar, email=   gurender.kush@nagarro.com   , expectedMessage=Customer successfully registered, gender=, dob=1983-10-26, firstName=Gurender, lastName=Kush, endpoint=qa/customer/api/v1/register}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@7dee835]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- customer_registration -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:TestCases.Customer_Registartion@628c4ac0]" name="afterMethod" is-config="true" duration-ms="41" started-at="2021-04-06T15:13:40Z" finished-at="2021-04-06T15:13:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestCases.Customer_Registartion@628c4ac0]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2021-04-06T15:13:40Z" finished-at="2021-04-06T15:13:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="customer_registration(java.util.Hashtable, org.testng.ITestContext)[pri:0, instance:TestCases.Customer_Registartion@628c4ac0]" name="customer_registration" duration-ms="5247" started-at="2021-04-06T15:13:40Z" data-provider="dp" finished-at="2021-04-06T15:13:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{mobile=1, businessType=SUBSCRIBE, referralCode=1.0, expectedErrorCode=201.0, referredBy=Gurender, occupationTypeCode=SELF, middleName=Kumar, email=   gurender.kush@nagarro.com   , expectedMessage=Customer successfully registered, gender=M, dob=1983-10-26, firstName=Gurender, lastName=Kush, endpoint=qa/customer/api/v1/register}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@7dee835]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- customer_registration -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:TestCases.Customer_Registartion@628c4ac0]" name="afterMethod" is-config="true" duration-ms="57" started-at="2021-04-06T15:13:45Z" finished-at="2021-04-06T15:13:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestCases.Customer_Registartion@628c4ac0]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2021-04-06T15:13:45Z" finished-at="2021-04-06T15:13:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="invalid_customer_registration(java.util.Hashtable, org.testng.ITestContext)[pri:0, instance:TestCases.Customer_Registartion@628c4ac0]" name="invalid_customer_registration" duration-ms="816" started-at="2021-04-06T15:13:45Z" data-provider="dp" finished-at="2021-04-06T15:13:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{mobile=, businessType=SUBSCRIBE, referralCode=, expectedErrorCode=400, referredBy=, occupationTypeCode=SELF, middleName=Kumar, email=gurender.kush@nagarro.com, expectedMessage=Please provide valid mobile, gender=, dob=, firstName=Gurender, lastName=Kush, endpoint=qa/customer/api/v1/register}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@7dee835]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalid_customer_registration -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:TestCases.Customer_Registartion@628c4ac0]" name="afterMethod" is-config="true" duration-ms="37" started-at="2021-04-06T15:13:46Z" finished-at="2021-04-06T15:13:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="invalid_customer_registration(java.util.Hashtable, org.testng.ITestContext)[pri:0, instance:TestCases.Customer_Registartion@628c4ac0]" name="invalid_customer_registration" duration-ms="470" started-at="2021-04-06T15:13:46Z" data-provider="dp" finished-at="2021-04-06T15:13:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{mobile=1, businessType=, referralCode=, expectedErrorCode=400, referredBy=, occupationTypeCode=SELF, middleName=Kumar, email=gurender.kush@nagarro.com, expectedMessage=Business type is mandatory, gender=, dob=, firstName=Gurender, lastName=Kush, endpoint=qa/customer/api/v1/register}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@7dee835]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalid_customer_registration -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestCases.Customer_Registartion@628c4ac0]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2021-04-06T15:13:46Z" finished-at="2021-04-06T15:13:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:TestCases.Customer_Registartion@628c4ac0]" name="afterMethod" is-config="true" duration-ms="33" started-at="2021-04-06T15:13:47Z" finished-at="2021-04-06T15:13:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestCases.Customer_Registartion@628c4ac0]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2021-04-06T15:13:47Z" finished-at="2021-04-06T15:13:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="invalid_customer_registration(java.util.Hashtable, org.testng.ITestContext)[pri:0, instance:TestCases.Customer_Registartion@628c4ac0]" name="invalid_customer_registration" duration-ms="1922" started-at="2021-04-06T15:13:47Z" data-provider="dp" finished-at="2021-04-06T15:13:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{mobile=1, businessType=SUBSCRIBE, referralCode=, expectedErrorCode=400, referredBy=, occupationTypeCode=SELF, middleName=Kumar, email=gurender.kush@nagarro.com, expectedMessage=JSON parse error: Cannot deserialize value of type `java.time.LocalDate` from String \"26-10-1983\": Failed to deserialize java.time.LocalDate: (java.time.format.DateTimeParseException) Text '26-10-1983' could not be parsed at index 5; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.time.LocalDate` from String \"26-10-1983\": Failed to deserialize java.time.LocalDate: (java.time.format.DateTimeParseException) Text '26-10-1983' could not be parsed at index 5\n at [Source: (PushbackInputStream); line: 8, column: 12] (through reference chain: com.marutisuzuki.customer.dto.request.CustomerRegisterReqDto[\"dob\"]), gender=, dob=26-10-1983, firstName=Gurender, lastName=Kush, endpoint=qa/customer/api/v1/register}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@7dee835]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [JSON parse error: Cannot deserialize value of type `java.time.LocalDate` from String "26-10-1983": Failed to deserialize java.time.LocalDate: (java.time.format.DateTimeParseException) Text '26-10-1983' could not be parsed at index 5; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.time.LocalDate` from String "26-10-1983": Failed to deserialize java.time.LocalDate: (java.time.format.DateTimeParseException) Text '26-10-1983' could not be parsed at index 5n at [Source: (PushbackInputStream); line: 8, column: 12] (through reference chain: com.marutisuzuki.customer.dto.request.CustomerRegisterReqDto["dob"])] but found [JSON parse error: Cannot deserialize value of type `java.time.LocalDate` from String "26-10-1983": Failed to deserialize java.time.LocalDate: (java.time.format.DateTimeParseException) Text '26-10-1983' could not be parsed at index 0; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.time.LocalDate` from String "26-10-1983": Failed to deserialize java.time.LocalDate: (java.time.format.DateTimeParseException) Text '26-10-1983' could not be parsed at index 0
 at [Source: (PushbackInputStream); line: 1, column: 128] (through reference chain: com.marutisuzuki.customer.dto.request.CustomerRegisterReqDto["dob"])]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [JSON parse error: Cannot deserialize value of type `java.time.LocalDate` from String "26-10-1983": Failed to deserialize java.time.LocalDate: (java.time.format.DateTimeParseException) Text '26-10-1983' could not be parsed at index 5; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.time.LocalDate` from String "26-10-1983": Failed to deserialize java.time.LocalDate: (java.time.format.DateTimeParseException) Text '26-10-1983' could not be parsed at index 5n at [Source: (PushbackInputStream); line: 8, column: 12] (through reference chain: com.marutisuzuki.customer.dto.request.CustomerRegisterReqDto["dob"])] but found [JSON parse error: Cannot deserialize value of type `java.time.LocalDate` from String "26-10-1983": Failed to deserialize java.time.LocalDate: (java.time.format.DateTimeParseException) Text '26-10-1983' could not be parsed at index 0; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.time.LocalDate` from String "26-10-1983": Failed to deserialize java.time.LocalDate: (java.time.format.DateTimeParseException) Text '26-10-1983' could not be parsed at index 0
 at [Source: (PushbackInputStream); line: 1, column: 128] (through reference chain: com.marutisuzuki.customer.dto.request.CustomerRegisterReqDto["dob"])]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at org.testng.Assert.assertEquals(Assert.java:189)
	at org.testng.Assert.assertEquals(Assert.java:199)
	at com.MSIL.TestUtils.Verify_Response.verify_Response_1(Verify_Response.java:38)
	at com.MSIL.API_LISTS.Cust_Regsiration_API.customer_registration_API(Cust_Regsiration_API.java:40)
	at TestCases.Customer_Registartion.invalid_customer_registration(Customer_Registartion.java:33)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalid_customer_registration -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:TestCases.Customer_Registartion@628c4ac0]" name="afterMethod" is-config="true" duration-ms="39" started-at="2021-04-06T15:13:49Z" finished-at="2021-04-06T15:13:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="invalid_customer_registration(java.util.Hashtable, org.testng.ITestContext)[pri:0, instance:TestCases.Customer_Registartion@628c4ac0]" name="invalid_customer_registration" duration-ms="2" started-at="2021-04-06T15:13:49Z" data-provider="dp" finished-at="2021-04-06T15:13:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{mobile=1, businessType=SUBSCRIBE, referralCode=, expectedErrorCode=400, referredBy=, occupationTypeCode=SELF, middleName=Kumar, email=gurender.kush@nagarro.com, expectedMessage=JSON parse error: Cannot deserialize value of type `java.time.LocalDate` from String \"26-10-1983\": Failed to deserialize java.time.LocalDate: (java.time.format.DateTimeParseException) Text '26-10-1983' could not be parsed at index 5; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.time.LocalDate` from String \"26-10-1983\": Failed to deserialize java.time.LocalDate: (java.time.format.DateTimeParseException) Text '26-10-1983' could not be parsed at index 5\n at [Source: (PushbackInputStream); line: 8, column: 12] (through reference chain: com.marutisuzuki.customer.dto.request.CustomerRegisterReqDto[\"dob\"]), gender=, dob=26-10-1983, firstName=Gurender, lastName=Kush, endpoint=qa/customer/api/v1/register}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[wrong number of arguments]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: wrong number of arguments
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.retryFailed(Invoker.java:1014)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1215)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalid_customer_registration -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestCases.Customer_Registartion@628c4ac0]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2021-04-06T15:13:49Z" finished-at="2021-04-06T15:13:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:TestCases.Customer_Registartion@628c4ac0]" name="afterMethod" is-config="true" duration-ms="40" started-at="2021-04-06T15:13:49Z" finished-at="2021-04-06T15:13:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestCases.Customer_Registartion@628c4ac0]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2021-04-06T15:13:49Z" finished-at="2021-04-06T15:13:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="invalid_customer_registration(java.util.Hashtable, org.testng.ITestContext)[pri:0, instance:TestCases.Customer_Registartion@628c4ac0]" name="invalid_customer_registration" duration-ms="1" started-at="2021-04-06T15:13:49Z" data-provider="dp" finished-at="2021-04-06T15:13:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{mobile=1, businessType=SUBSCRIBE, referralCode=, expectedErrorCode=400, referredBy=, occupationTypeCode=SELF, middleName=Kumar, email=gurender.kush@nagarro.com, expectedMessage=JSON parse error: Cannot deserialize value of type `java.time.LocalDate` from String \"26-10-1983\": Failed to deserialize java.time.LocalDate: (java.time.format.DateTimeParseException) Text '26-10-1983' could not be parsed at index 5; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.time.LocalDate` from String \"26-10-1983\": Failed to deserialize java.time.LocalDate: (java.time.format.DateTimeParseException) Text '26-10-1983' could not be parsed at index 5\n at [Source: (PushbackInputStream); line: 8, column: 12] (through reference chain: com.marutisuzuki.customer.dto.request.CustomerRegisterReqDto[\"dob\"]), gender=, dob=26-10-1983, firstName=Gurender, lastName=Kush, endpoint=qa/customer/api/v1/register}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[wrong number of arguments]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: wrong number of arguments
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.retryFailed(Invoker.java:1014)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1215)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalid_customer_registration -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:TestCases.Customer_Registartion@628c4ac0]" name="afterMethod" is-config="true" duration-ms="49" started-at="2021-04-06T15:13:49Z" finished-at="2021-04-06T15:13:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="invalid_customer_registration(java.util.Hashtable, org.testng.ITestContext)[pri:0, instance:TestCases.Customer_Registartion@628c4ac0]" name="invalid_customer_registration" duration-ms="1080" started-at="2021-04-06T15:13:49Z" data-provider="dp" finished-at="2021-04-06T15:13:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{mobile=1, businessType=SUBSCRIBE, referralCode=, expectedErrorCode=400, referredBy=, occupationTypeCode=ABC, middleName=Kumar, email=gurender.kush@nagarro.com, expectedMessage=Occupation type does not exist for given code, gender=, dob=, firstName=Gurender, lastName=Kush, endpoint=qa/customer/api/v1/register}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@7dee835]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalid_customer_registration -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestCases.Customer_Registartion@628c4ac0]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2021-04-06T15:13:49Z" finished-at="2021-04-06T15:13:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:TestCases.Customer_Registartion@628c4ac0]" name="afterMethod" is-config="true" duration-ms="39" started-at="2021-04-06T15:13:50Z" finished-at="2021-04-06T15:13:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestCases.Customer_Registartion@628c4ac0]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2021-04-06T15:13:50Z" finished-at="2021-04-06T15:13:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="invalid_customer_registration(java.util.Hashtable, org.testng.ITestContext)[pri:0, instance:TestCases.Customer_Registartion@628c4ac0]" name="invalid_customer_registration" duration-ms="498" started-at="2021-04-06T15:13:50Z" data-provider="dp" finished-at="2021-04-06T15:13:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{mobile=1, businessType=ABC, referralCode=, expectedErrorCode=400, referredBy=, occupationTypeCode=, middleName=Kumar, email=gurender.kush@nagarro.com, expectedMessage=Please provide valid business type, gender=, dob=, firstName=Gurender, lastName=Kush, endpoint=qa/customer/api/v1/register}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@7dee835]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalid_customer_registration -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:TestCases.Customer_Registartion@628c4ac0]" name="afterMethod" is-config="true" duration-ms="29" started-at="2021-04-06T15:13:50Z" finished-at="2021-04-06T15:13:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestCases.Customer_Registartion@628c4ac0]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2021-04-06T15:13:50Z" finished-at="2021-04-06T15:13:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="invalid_customer_registration(java.util.Hashtable, org.testng.ITestContext)[pri:0, instance:TestCases.Customer_Registartion@628c4ac0]" name="invalid_customer_registration" duration-ms="467" started-at="2021-04-06T15:13:50Z" data-provider="dp" finished-at="2021-04-06T15:13:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{mobile=1, businessType=SUBSCRIBE, referralCode=, expectedErrorCode=400, referredBy=, occupationTypeCode=, middleName=Kumar, email=gurender.kush@nagarro.com, expectedMessage=First Name is mandatory, gender=, dob=, firstName=, lastName=Kush, endpoint=qa/customer/api/v1/register}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@7dee835]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalid_customer_registration -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:TestCases.Customer_Registartion@628c4ac0]" name="afterMethod" is-config="true" duration-ms="34" started-at="2021-04-06T15:13:51Z" finished-at="2021-04-06T15:13:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestCases.Customer_Registartion@628c4ac0]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2021-04-06T15:13:51Z" finished-at="2021-04-06T15:13:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="invalid_customer_registration(java.util.Hashtable, org.testng.ITestContext)[pri:0, instance:TestCases.Customer_Registartion@628c4ac0]" name="invalid_customer_registration" duration-ms="489" started-at="2021-04-06T15:13:51Z" data-provider="dp" finished-at="2021-04-06T15:13:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{mobile=1, businessType=SUBSCRIBE, referralCode=, expectedErrorCode=400, referredBy=, occupationTypeCode=SELF, middleName=Kumar, email=gurender.kush@nagarro.com, expectedMessage=JSON parse error: Cannot deserialize value of type `java.time.LocalDate` from String \"1983/01/01'\": Failed to deserialize java.time.LocalDate: (java.time.format.DateTimeParseException) Text '1983/01/01' could not be parsed at index 5; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.time.LocalDate` from String \"1983/01/01\": Failed to deserialize java.time.LocalDate: (java.time.format.DateTimeParseException) Text '1983/01/01' could not be parsed at index 5\n at [Source: (PushbackInputStream); line: 8, column: 12] (through reference chain: com.marutisuzuki.customer.dto.request.CustomerRegisterReqDto[\"dob\"]), gender=, dob=1983/01/01, firstName=Gurender, lastName=Kush, endpoint=qa/customer/api/v1/register}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@7dee835]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [JSON parse error: Cannot deserialize value of type `java.time.LocalDate` from String "1983/01/01'": Failed to deserialize java.time.LocalDate: (java.time.format.DateTimeParseException) Text '1983/01/01' could not be parsed at index 5; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.time.LocalDate` from String "1983/01/01": Failed to deserialize java.time.LocalDate: (java.time.format.DateTimeParseException) Text '1983/01/01' could not be parsed at index 5n at [Source: (PushbackInputStream); line: 8, column: 12] (through reference chain: com.marutisuzuki.customer.dto.request.CustomerRegisterReqDto["dob"])] but found [JSON parse error: Cannot deserialize value of type `java.time.LocalDate` from String "1983/01/01": Failed to deserialize java.time.LocalDate: (java.time.format.DateTimeParseException) Text '1983/01/01' could not be parsed at index 4; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.time.LocalDate` from String "1983/01/01": Failed to deserialize java.time.LocalDate: (java.time.format.DateTimeParseException) Text '1983/01/01' could not be parsed at index 4
 at [Source: (PushbackInputStream); line: 1, column: 128] (through reference chain: com.marutisuzuki.customer.dto.request.CustomerRegisterReqDto["dob"])]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [JSON parse error: Cannot deserialize value of type `java.time.LocalDate` from String "1983/01/01'": Failed to deserialize java.time.LocalDate: (java.time.format.DateTimeParseException) Text '1983/01/01' could not be parsed at index 5; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.time.LocalDate` from String "1983/01/01": Failed to deserialize java.time.LocalDate: (java.time.format.DateTimeParseException) Text '1983/01/01' could not be parsed at index 5n at [Source: (PushbackInputStream); line: 8, column: 12] (through reference chain: com.marutisuzuki.customer.dto.request.CustomerRegisterReqDto["dob"])] but found [JSON parse error: Cannot deserialize value of type `java.time.LocalDate` from String "1983/01/01": Failed to deserialize java.time.LocalDate: (java.time.format.DateTimeParseException) Text '1983/01/01' could not be parsed at index 4; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.time.LocalDate` from String "1983/01/01": Failed to deserialize java.time.LocalDate: (java.time.format.DateTimeParseException) Text '1983/01/01' could not be parsed at index 4
 at [Source: (PushbackInputStream); line: 1, column: 128] (through reference chain: com.marutisuzuki.customer.dto.request.CustomerRegisterReqDto["dob"])]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at org.testng.Assert.assertEquals(Assert.java:189)
	at org.testng.Assert.assertEquals(Assert.java:199)
	at com.MSIL.TestUtils.Verify_Response.verify_Response_1(Verify_Response.java:38)
	at com.MSIL.API_LISTS.Cust_Regsiration_API.customer_registration_API(Cust_Regsiration_API.java:40)
	at TestCases.Customer_Registartion.invalid_customer_registration(Customer_Registartion.java:33)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalid_customer_registration -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:TestCases.Customer_Registartion@628c4ac0]" name="afterMethod" is-config="true" duration-ms="28" started-at="2021-04-06T15:13:51Z" finished-at="2021-04-06T15:13:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="FAIL" signature="invalid_customer_registration(java.util.Hashtable, org.testng.ITestContext)[pri:0, instance:TestCases.Customer_Registartion@628c4ac0]" name="invalid_customer_registration" duration-ms="1" started-at="2021-04-06T15:13:51Z" data-provider="dp" finished-at="2021-04-06T15:13:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{mobile=1, businessType=SUBSCRIBE, referralCode=, expectedErrorCode=400, referredBy=, occupationTypeCode=SELF, middleName=Kumar, email=gurender.kush@nagarro.com, expectedMessage=JSON parse error: Cannot deserialize value of type `java.time.LocalDate` from String \"1983/01/01'\": Failed to deserialize java.time.LocalDate: (java.time.format.DateTimeParseException) Text '1983/01/01' could not be parsed at index 5; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.time.LocalDate` from String \"1983/01/01\": Failed to deserialize java.time.LocalDate: (java.time.format.DateTimeParseException) Text '1983/01/01' could not be parsed at index 5\n at [Source: (PushbackInputStream); line: 8, column: 12] (through reference chain: com.marutisuzuki.customer.dto.request.CustomerRegisterReqDto[\"dob\"]), gender=, dob=1983/01/01, firstName=Gurender, lastName=Kush, endpoint=qa/customer/api/v1/register}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[wrong number of arguments]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: wrong number of arguments
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.retryFailed(Invoker.java:1014)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1215)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalid_customer_registration -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestCases.Customer_Registartion@628c4ac0]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2021-04-06T15:13:51Z" finished-at="2021-04-06T15:13:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:TestCases.Customer_Registartion@628c4ac0]" name="afterMethod" is-config="true" duration-ms="31" started-at="2021-04-06T15:13:51Z" finished-at="2021-04-06T15:13:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestCases.Customer_Registartion@628c4ac0]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2021-04-06T15:13:51Z" finished-at="2021-04-06T15:13:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="invalid_customer_registration(java.util.Hashtable, org.testng.ITestContext)[pri:0, instance:TestCases.Customer_Registartion@628c4ac0]" name="invalid_customer_registration" duration-ms="625" started-at="2021-04-06T15:13:51Z" data-provider="dp" finished-at="2021-04-06T15:13:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{mobile=1, businessType=SUBSCRIBE, referralCode=, expectedErrorCode=400, referredBy=, occupationTypeCode=SELF, middleName=Kumar, email=gurender.kush@nagarro.com, expectedMessage=JSON parse error: Cannot deserialize value of type `java.time.LocalDate` from String \"1983-1-1\": Failed to deserialize java.time.LocalDate: (java.time.format.DateTimeParseException) Text '1983-1-1' could not be parsed at index 5; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.time.LocalDate` from String \"1983-1-1\": Failed to deserialize java.time.LocalDate: (java.time.format.DateTimeParseException) Text '1983-1-1' could not be parsed at index 5\n at [Source: (PushbackInputStream); line: 8, column: 12] (through reference chain: com.marutisuzuki.customer.dto.request.CustomerRegisterReqDto[\"dob\"]), gender=, dob=1983-01-01, firstName=Gurender, lastName=Kush, endpoint=qa/customer/api/v1/register}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@7dee835]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
	at com.MSIL.TestUtils.Verify_Response.verify_Response_1(Verify_Response.java:35)
	at com.MSIL.API_LISTS.Cust_Regsiration_API.customer_registration_API(Cust_Regsiration_API.java:40)
	at TestCases.Customer_Registartion.invalid_customer_registration(Customer_Registartion.java:33)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalid_customer_registration -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:TestCases.Customer_Registartion@628c4ac0]" name="afterMethod" is-config="true" duration-ms="28" started-at="2021-04-06T15:13:52Z" finished-at="2021-04-06T15:13:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestCases.Customer_Registartion@628c4ac0]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2021-04-06T15:13:52Z" finished-at="2021-04-06T15:13:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="invalid_customer_registration(java.util.Hashtable, org.testng.ITestContext)[pri:0, instance:TestCases.Customer_Registartion@628c4ac0]" name="invalid_customer_registration" duration-ms="1" started-at="2021-04-06T15:13:52Z" data-provider="dp" finished-at="2021-04-06T15:13:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{mobile=1, businessType=SUBSCRIBE, referralCode=, expectedErrorCode=400, referredBy=, occupationTypeCode=SELF, middleName=Kumar, email=gurender.kush@nagarro.com, expectedMessage=JSON parse error: Cannot deserialize value of type `java.time.LocalDate` from String \"1983-1-1\": Failed to deserialize java.time.LocalDate: (java.time.format.DateTimeParseException) Text '1983-1-1' could not be parsed at index 5; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.time.LocalDate` from String \"1983-1-1\": Failed to deserialize java.time.LocalDate: (java.time.format.DateTimeParseException) Text '1983-1-1' could not be parsed at index 5\n at [Source: (PushbackInputStream); line: 8, column: 12] (through reference chain: com.marutisuzuki.customer.dto.request.CustomerRegisterReqDto[\"dob\"]), gender=, dob=1983-01-01, firstName=Gurender, lastName=Kush, endpoint=qa/customer/api/v1/register}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[wrong number of arguments]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: wrong number of arguments
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.retryFailed(Invoker.java:1014)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1215)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalid_customer_registration -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:TestCases.Customer_Registartion@628c4ac0]" name="afterMethod" is-config="true" duration-ms="36" started-at="2021-04-06T15:13:52Z" finished-at="2021-04-06T15:13:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- TestCases.Customer_Registartion -->
      <class name="TestCases.Fectch_Nearest_Dealer">
        <test-method status="SKIP" signature="fetch_nearest_dealer(java.util.Hashtable, org.testng.ITestContext)[pri:0, instance:TestCases.Fectch_Nearest_Dealer@44b3606b]" name="fetch_nearest_dealer" duration-ms="639" started-at="2021-04-06T15:15:11Z" data-provider="dp" finished-at="2021-04-06T15:15:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{expectedMessage=, expectedErrorCode=200.0, pinCode=324324, longitude=72.454545, citycode=1, endpoint=qa/api/partner/nearest-dealers, distance=50000, latitude=19.11454}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@7dee835]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
	at com.MSIL.Response.Verify_Response_Nearest_Dealer.verify_Response(Verify_Response_Nearest_Dealer.java:23)
	at com.MSIL.API_LISTS.Fetch_Nearest_Dealer_API.nearest_dealer_API(Fetch_Nearest_Dealer_API.java:36)
	at TestCases.Fectch_Nearest_Dealer.fetch_nearest_dealer(Fectch_Nearest_Dealer.java:21)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fetch_nearest_dealer -->
        <test-method status="PASS" signature="beforClass()[pri:0, instance:TestCases.Fectch_Nearest_Dealer@44b3606b]" name="beforClass" is-config="true" duration-ms="0" started-at="2021-04-06T15:15:11Z" finished-at="2021-04-06T15:15:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestCases.Fectch_Nearest_Dealer@44b3606b]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2021-04-06T15:15:11Z" finished-at="2021-04-06T15:15:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:TestCases.Fectch_Nearest_Dealer@44b3606b]" name="afterMethod" is-config="true" duration-ms="53" started-at="2021-04-06T15:15:12Z" finished-at="2021-04-06T15:15:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="fetch_nearest_dealer(java.util.Hashtable, org.testng.ITestContext)[pri:0, instance:TestCases.Fectch_Nearest_Dealer@44b3606b]" name="fetch_nearest_dealer" duration-ms="1" started-at="2021-04-06T15:15:12Z" data-provider="dp" finished-at="2021-04-06T15:15:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{expectedMessage=, expectedErrorCode=200.0, pinCode=324324, longitude=72.454545, citycode=1, endpoint=qa/api/partner/nearest-dealers, distance=50000, latitude=19.11454}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[wrong number of arguments]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: wrong number of arguments
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.retryFailed(Invoker.java:1014)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1215)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fetch_nearest_dealer -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestCases.Fectch_Nearest_Dealer@44b3606b]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2021-04-06T15:15:12Z" finished-at="2021-04-06T15:15:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:TestCases.Fectch_Nearest_Dealer@44b3606b]" name="afterMethod" is-config="true" duration-ms="28" started-at="2021-04-06T15:15:12Z" finished-at="2021-04-06T15:15:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestCases.Fectch_Nearest_Dealer@44b3606b]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2021-04-06T15:15:12Z" finished-at="2021-04-06T15:15:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="fetch_nearest_dealer(java.util.Hashtable, org.testng.ITestContext)[pri:0, instance:TestCases.Fectch_Nearest_Dealer@44b3606b]" name="fetch_nearest_dealer" duration-ms="1" started-at="2021-04-06T15:15:12Z" data-provider="dp" finished-at="2021-04-06T15:15:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{expectedMessage=, expectedErrorCode=200.0, pinCode=324324, longitude=72.454545, citycode=1, endpoint=qa/api/partner/nearest-dealers, distance=50000, latitude=19.11454}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[wrong number of arguments]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: wrong number of arguments
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.retryFailed(Invoker.java:1014)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1215)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fetch_nearest_dealer -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:TestCases.Fectch_Nearest_Dealer@44b3606b]" name="afterMethod" is-config="true" duration-ms="34" started-at="2021-04-06T15:15:12Z" finished-at="2021-04-06T15:15:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="nearest_dealer_not_found(java.util.Hashtable, org.testng.ITestContext)[pri:0, instance:TestCases.Fectch_Nearest_Dealer@44b3606b]" name="nearest_dealer_not_found" duration-ms="446" started-at="2021-04-06T15:15:12Z" data-provider="dp" finished-at="2021-04-06T15:15:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{expectedMessage=Dealer not found., expectedErrorCode=400, pinCode=324324, longitude=72.454545, citycode=1, endpoint=qa/api/partner/nearest-dealers, distance=50, latitude=19.11454}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@7dee835]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
	at com.MSIL.Response.Verify_Response_Nearest_Dealer.verify_Response_dealernotfound(Verify_Response_Nearest_Dealer.java:47)
	at com.MSIL.API_LISTS.Fetch_Nearest_Dealer_API.nearest_dealer_API(Fetch_Nearest_Dealer_API.java:39)
	at TestCases.Fectch_Nearest_Dealer.nearest_dealer_not_found(Fectch_Nearest_Dealer.java:31)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nearest_dealer_not_found -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestCases.Fectch_Nearest_Dealer@44b3606b]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2021-04-06T15:15:12Z" finished-at="2021-04-06T15:15:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:TestCases.Fectch_Nearest_Dealer@44b3606b]" name="afterMethod" is-config="true" duration-ms="30" started-at="2021-04-06T15:15:13Z" finished-at="2021-04-06T15:15:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestCases.Fectch_Nearest_Dealer@44b3606b]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2021-04-06T15:15:13Z" finished-at="2021-04-06T15:15:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="nearest_dealer_not_found(java.util.Hashtable, org.testng.ITestContext)[pri:0, instance:TestCases.Fectch_Nearest_Dealer@44b3606b]" name="nearest_dealer_not_found" duration-ms="1" started-at="2021-04-06T15:15:13Z" data-provider="dp" finished-at="2021-04-06T15:15:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{expectedMessage=Dealer not found., expectedErrorCode=400, pinCode=324324, longitude=72.454545, citycode=1, endpoint=qa/api/partner/nearest-dealers, distance=50, latitude=19.11454}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[wrong number of arguments]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: wrong number of arguments
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.retryFailed(Invoker.java:1014)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1215)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nearest_dealer_not_found -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:TestCases.Fectch_Nearest_Dealer@44b3606b]" name="afterMethod" is-config="true" duration-ms="26" started-at="2021-04-06T15:15:13Z" finished-at="2021-04-06T15:15:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="FAIL" signature="nearest_dealer_not_found(java.util.Hashtable, org.testng.ITestContext)[pri:0, instance:TestCases.Fectch_Nearest_Dealer@44b3606b]" name="nearest_dealer_not_found" duration-ms="1" started-at="2021-04-06T15:15:13Z" data-provider="dp" finished-at="2021-04-06T15:15:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{expectedMessage=Dealer not found., expectedErrorCode=400, pinCode=324324, longitude=72.454545, citycode=1, endpoint=qa/api/partner/nearest-dealers, distance=50, latitude=19.11454}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[wrong number of arguments]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: wrong number of arguments
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.retryFailed(Invoker.java:1014)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1215)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nearest_dealer_not_found -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestCases.Fectch_Nearest_Dealer@44b3606b]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2021-04-06T15:15:13Z" finished-at="2021-04-06T15:15:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:TestCases.Fectch_Nearest_Dealer@44b3606b]" name="afterMethod" is-config="true" duration-ms="29" started-at="2021-04-06T15:15:13Z" finished-at="2021-04-06T15:15:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- TestCases.Fectch_Nearest_Dealer -->
      <class name="TestCases.UpdateCustomerOccupation">
        <test-method status="PASS" signature="beforClass()[pri:0, instance:TestCases.UpdateCustomerOccupation@33b1c5c5]" name="beforClass" is-config="true" duration-ms="0" started-at="2021-04-06T15:15:21Z" finished-at="2021-04-06T15:15:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforClass -->
        <test-method status="PASS" signature="update_customer_occupation(java.util.Hashtable, org.testng.ITestContext)[pri:0, instance:TestCases.UpdateCustomerOccupation@33b1c5c5]" name="update_customer_occupation" duration-ms="960" started-at="2021-04-06T15:15:21Z" data-provider="dp" finished-at="2021-04-06T15:15:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{workEx=FINANCE, expectedErrorCode=201, occupationTypeCode=SALARIED, netIncome=120000, grossIncome=100000, validTill=2031-02-18, employerType=PUBLIC, expectedMessage=, validFrom=2021-02-12, endpoint=qa/customer/api/v1/employment, companyName=MarutiSuzuki}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@7dee835]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- update_customer_occupation -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestCases.UpdateCustomerOccupation@33b1c5c5]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2021-04-06T15:15:21Z" finished-at="2021-04-06T15:15:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:TestCases.UpdateCustomerOccupation@33b1c5c5]" name="afterMethod" is-config="true" duration-ms="70" started-at="2021-04-06T15:15:22Z" finished-at="2021-04-06T15:15:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- TestCases.UpdateCustomerOccupation -->
      <class name="TestCases.Leasing_Partner_Ranking">
        <test-method status="PASS" signature="beforClass()[pri:0, instance:TestCases.Leasing_Partner_Ranking@2cc44ad]" name="beforClass" is-config="true" duration-ms="1" started-at="2021-04-06T15:15:10Z" finished-at="2021-04-06T15:15:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforClass -->
        <test-method status="SKIP" signature="leasing_ranking(java.util.Hashtable, org.testng.ITestContext)[pri:0, instance:TestCases.Leasing_Partner_Ranking@2cc44ad]" name="leasing_ranking" duration-ms="1215" started-at="2021-04-06T15:15:10Z" data-provider="dp" finished-at="2021-04-06T15:15:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{expectedMessage=, expectedErrorCode=200.0, endpoint=qa/api/partner/leasing-company-rating}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@7dee835]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
	at com.MSIL.Response.Verify_Response_Leasing_Ranking.verify_Response(Verify_Response_Leasing_Ranking.java:24)
	at com.MSIL.API_LISTS.Leasing_Partner_Ranking_API.leasing_partner_ranking(Leasing_Partner_Ranking_API.java:33)
	at TestCases.Leasing_Partner_Ranking.leasing_ranking(Leasing_Partner_Ranking.java:22)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- leasing_ranking -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestCases.Leasing_Partner_Ranking@2cc44ad]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2021-04-06T15:15:10Z" finished-at="2021-04-06T15:15:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:TestCases.Leasing_Partner_Ranking@2cc44ad]" name="afterMethod" is-config="true" duration-ms="36" started-at="2021-04-06T15:15:11Z" finished-at="2021-04-06T15:15:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="leasing_ranking(java.util.Hashtable, org.testng.ITestContext)[pri:0, instance:TestCases.Leasing_Partner_Ranking@2cc44ad]" name="leasing_ranking" duration-ms="1" started-at="2021-04-06T15:15:11Z" data-provider="dp" finished-at="2021-04-06T15:15:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{expectedMessage=, expectedErrorCode=200.0, endpoint=qa/api/partner/leasing-company-rating}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[wrong number of arguments]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: wrong number of arguments
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.retryFailed(Invoker.java:1014)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1215)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- leasing_ranking -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestCases.Leasing_Partner_Ranking@2cc44ad]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2021-04-06T15:15:11Z" finished-at="2021-04-06T15:15:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:TestCases.Leasing_Partner_Ranking@2cc44ad]" name="afterMethod" is-config="true" duration-ms="31" started-at="2021-04-06T15:15:11Z" finished-at="2021-04-06T15:15:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="FAIL" signature="leasing_ranking(java.util.Hashtable, org.testng.ITestContext)[pri:0, instance:TestCases.Leasing_Partner_Ranking@2cc44ad]" name="leasing_ranking" duration-ms="1" started-at="2021-04-06T15:15:11Z" data-provider="dp" finished-at="2021-04-06T15:15:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{expectedMessage=, expectedErrorCode=200.0, endpoint=qa/api/partner/leasing-company-rating}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[wrong number of arguments]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: wrong number of arguments
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.retryFailed(Invoker.java:1014)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1215)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- leasing_ranking -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestCases.Leasing_Partner_Ranking@2cc44ad]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2021-04-06T15:15:11Z" finished-at="2021-04-06T15:15:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:TestCases.Leasing_Partner_Ranking@2cc44ad]" name="afterMethod" is-config="true" duration-ms="27" started-at="2021-04-06T15:15:11Z" finished-at="2021-04-06T15:15:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- TestCases.Leasing_Partner_Ranking -->
      <class name="TestCases.SaveCustomerOccupation">
        <test-method status="PASS" signature="beforClass()[pri:0, instance:TestCases.SaveCustomerOccupation@75cd8043]" name="beforClass" is-config="true" duration-ms="0" started-at="2021-04-06T15:15:20Z" finished-at="2021-04-06T15:15:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforClass -->
        <test-method status="PASS" signature="save_customer_occupation(java.util.Hashtable, org.testng.ITestContext)[pri:0, instance:TestCases.SaveCustomerOccupation@75cd8043]" name="save_customer_occupation" duration-ms="1196" started-at="2021-04-06T15:15:20Z" data-provider="dp" finished-at="2021-04-06T15:15:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{workEx=SALES, expectedErrorCode=201, occupationTypeCode=SELF, netIncome=120000, grossIncome=100000, validTill=2031-02-18, employerType=PUBLIC, expectedMessage=, validFrom=2021-02-12, endpoint=qa/customer/api/v1/employment, companyName=MarutiSuzuki}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@7dee835]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- save_customer_occupation -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestCases.SaveCustomerOccupation@75cd8043]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2021-04-06T15:15:20Z" finished-at="2021-04-06T15:15:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:TestCases.SaveCustomerOccupation@75cd8043]" name="afterMethod" is-config="true" duration-ms="26" started-at="2021-04-06T15:15:21Z" finished-at="2021-04-06T15:15:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- TestCases.SaveCustomerOccupation -->
      <class name="TestCases.Customer_Register_Send_Otp">
        <test-method status="PASS" signature="beforClass()[pri:0, instance:TestCases.Customer_Register_Send_Otp@604f2bd2]" name="beforClass" is-config="true" duration-ms="0" started-at="2021-04-06T15:12:17Z" finished-at="2021-04-06T15:12:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforClass -->
        <test-method status="PASS" signature="customer_regsiter_send_otp(java.util.Hashtable, org.testng.ITestContext)[pri:0, instance:TestCases.Customer_Register_Send_Otp@604f2bd2]" name="customer_regsiter_send_otp" duration-ms="52711" started-at="2021-04-06T15:12:17Z" data-provider="dp" finished-at="2021-04-06T15:13:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{mobile=1, expectedMessage=Otp sent successfully, expectedErrorCode=200, endpoint=qa/customer/api/v1/otp/register/send}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@7dee835]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- customer_regsiter_send_otp -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestCases.Customer_Register_Send_Otp@604f2bd2]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2021-04-06T15:12:17Z" finished-at="2021-04-06T15:12:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:TestCases.Customer_Register_Send_Otp@604f2bd2]" name="afterMethod" is-config="true" duration-ms="76" started-at="2021-04-06T15:13:10Z" finished-at="2021-04-06T15:13:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="invalid_mobile_send_otp(java.util.Hashtable, org.testng.ITestContext)[pri:0, instance:TestCases.Customer_Register_Send_Otp@604f2bd2]" name="invalid_mobile_send_otp" duration-ms="828" started-at="2021-04-06T15:13:10Z" data-provider="dp" finished-at="2021-04-06T15:13:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{mobile=, expectedMessage=Please provide valid mobile, expectedErrorCode=400, endpoint=qa/customer/api/v1/otp/register/send}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@7dee835]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalid_mobile_send_otp -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestCases.Customer_Register_Send_Otp@604f2bd2]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2021-04-06T15:13:10Z" finished-at="2021-04-06T15:13:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:TestCases.Customer_Register_Send_Otp@604f2bd2]" name="afterMethod" is-config="true" duration-ms="43" started-at="2021-04-06T15:13:11Z" finished-at="2021-04-06T15:13:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- TestCases.Customer_Register_Send_Otp -->
      <class name="TestCases.Customer_Update">
        <test-method status="PASS" signature="beforClass()[pri:0, instance:TestCases.Customer_Update@7b84fcf8]" name="beforClass" is-config="true" duration-ms="0" started-at="2021-04-06T15:13:52Z" finished-at="2021-04-06T15:13:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestCases.Customer_Update@7b84fcf8]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2021-04-06T15:13:52Z" finished-at="2021-04-06T15:13:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="customer_Update(java.util.Hashtable, org.testng.ITestContext)[pri:0, instance:TestCases.Customer_Update@7b84fcf8]" name="customer_Update" duration-ms="515" started-at="2021-04-06T15:13:52Z" data-provider="dp" finished-at="2021-04-06T15:13:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{referralCode=, expectedErrorCode=201, referredBy=, occupationTypeCode=SELF, middleName=Bhardwaj, email=, expectedMessage=null, gender=F, dob=1983-10-26, firstName=Kamini, lastName=, endpoint=qa/customer/api/v1/user/update}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@7dee835]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Kamini] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Kamini] but found [null]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:129)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at org.testng.Assert.assertEquals(Assert.java:189)
	at org.testng.Assert.assertEquals(Assert.java:199)
	at com.MSIL.TestUtils.Verify_Response.verify_Response_data(Verify_Response.java:52)
	at com.MSIL.API_LISTS.Cust_Regsiration_API.customer_update_API(Cust_Regsiration_API.java:59)
	at TestCases.Customer_Update.customer_Update(Customer_Update.java:21)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- customer_Update -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:TestCases.Customer_Update@7b84fcf8]" name="afterMethod" is-config="true" duration-ms="56" started-at="2021-04-06T15:13:53Z" finished-at="2021-04-06T15:13:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestCases.Customer_Update@7b84fcf8]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2021-04-06T15:13:53Z" finished-at="2021-04-06T15:13:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="customer_Update(java.util.Hashtable, org.testng.ITestContext)[pri:0, instance:TestCases.Customer_Update@7b84fcf8]" name="customer_Update" duration-ms="1" started-at="2021-04-06T15:13:53Z" data-provider="dp" finished-at="2021-04-06T15:13:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{referralCode=, expectedErrorCode=201, referredBy=, occupationTypeCode=SELF, middleName=Bhardwaj, email=, expectedMessage=null, gender=F, dob=1983-10-26, firstName=Kamini, lastName=, endpoint=qa/customer/api/v1/user/update}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[wrong number of arguments]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: wrong number of arguments
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.retryFailed(Invoker.java:1014)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1215)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- customer_Update -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:TestCases.Customer_Update@7b84fcf8]" name="afterMethod" is-config="true" duration-ms="24" started-at="2021-04-06T15:13:53Z" finished-at="2021-04-06T15:13:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="FAIL" signature="customer_Update(java.util.Hashtable, org.testng.ITestContext)[pri:0, instance:TestCases.Customer_Update@7b84fcf8]" name="customer_Update" duration-ms="1" started-at="2021-04-06T15:13:53Z" data-provider="dp" finished-at="2021-04-06T15:13:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{referralCode=, expectedErrorCode=201, referredBy=, occupationTypeCode=SELF, middleName=Bhardwaj, email=, expectedMessage=null, gender=F, dob=1983-10-26, firstName=Kamini, lastName=, endpoint=qa/customer/api/v1/user/update}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[wrong number of arguments]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: wrong number of arguments
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.retryFailed(Invoker.java:1014)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1215)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- customer_Update -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestCases.Customer_Update@7b84fcf8]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2021-04-06T15:13:53Z" finished-at="2021-04-06T15:13:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:TestCases.Customer_Update@7b84fcf8]" name="afterMethod" is-config="true" duration-ms="35" started-at="2021-04-06T15:13:53Z" finished-at="2021-04-06T15:13:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestCases.Customer_Update@7b84fcf8]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2021-04-06T15:13:53Z" finished-at="2021-04-06T15:13:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="customer_Update(java.util.Hashtable, org.testng.ITestContext)[pri:0, instance:TestCases.Customer_Update@7b84fcf8]" name="customer_Update" duration-ms="419" started-at="2021-04-06T15:13:53Z" data-provider="dp" finished-at="2021-04-06T15:13:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{referralCode=, expectedErrorCode=201, referredBy=, occupationTypeCode=SELF, middleName=Singh, email=, expectedMessage=null, gender=F, dob=1983-10-26, firstName=Kamini, lastName=Bhardwaj, endpoint=qa/customer/api/v1/user/update}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@7dee835]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Kamini] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Kamini] but found [null]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:129)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at org.testng.Assert.assertEquals(Assert.java:189)
	at org.testng.Assert.assertEquals(Assert.java:199)
	at com.MSIL.TestUtils.Verify_Response.verify_Response_data(Verify_Response.java:52)
	at com.MSIL.API_LISTS.Cust_Regsiration_API.customer_update_API(Cust_Regsiration_API.java:59)
	at TestCases.Customer_Update.customer_Update(Customer_Update.java:21)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- customer_Update -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:TestCases.Customer_Update@7b84fcf8]" name="afterMethod" is-config="true" duration-ms="41" started-at="2021-04-06T15:13:53Z" finished-at="2021-04-06T15:13:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestCases.Customer_Update@7b84fcf8]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2021-04-06T15:13:53Z" finished-at="2021-04-06T15:13:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="customer_Update(java.util.Hashtable, org.testng.ITestContext)[pri:0, instance:TestCases.Customer_Update@7b84fcf8]" name="customer_Update" duration-ms="1" started-at="2021-04-06T15:13:53Z" data-provider="dp" finished-at="2021-04-06T15:13:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{referralCode=, expectedErrorCode=201, referredBy=, occupationTypeCode=SELF, middleName=Singh, email=, expectedMessage=null, gender=F, dob=1983-10-26, firstName=Kamini, lastName=Bhardwaj, endpoint=qa/customer/api/v1/user/update}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[wrong number of arguments]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: wrong number of arguments
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.retryFailed(Invoker.java:1014)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1215)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- customer_Update -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:TestCases.Customer_Update@7b84fcf8]" name="afterMethod" is-config="true" duration-ms="25" started-at="2021-04-06T15:13:53Z" finished-at="2021-04-06T15:13:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestCases.Customer_Update@7b84fcf8]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2021-04-06T15:13:53Z" finished-at="2021-04-06T15:13:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="invalid_customer_update(java.util.Hashtable, org.testng.ITestContext)[pri:0, instance:TestCases.Customer_Update@7b84fcf8]" name="invalid_customer_update" duration-ms="449" started-at="2021-04-06T15:13:53Z" data-provider="dp" finished-at="2021-04-06T15:13:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{referralCode=, expectedErrorCode=400, referredBy=, occupationTypeCode=SELF, middleName=Bhardwaj, email=, expectedMessage=First Name is mandatory, gender=F, dob=1983-10-26, firstName=, lastName=, endpoint=qa/customer/api/v1/user/update}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@7dee835]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
	at com.MSIL.TestUtils.Verify_Response.verify_Response_data_1(Verify_Response.java:65)
	at com.MSIL.API_LISTS.Cust_Regsiration_API.customer_update_API(Cust_Regsiration_API.java:62)
	at TestCases.Customer_Update.invalid_customer_update(Customer_Update.java:32)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalid_customer_update -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:TestCases.Customer_Update@7b84fcf8]" name="afterMethod" is-config="true" duration-ms="25" started-at="2021-04-06T15:13:54Z" finished-at="2021-04-06T15:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="invalid_customer_update(java.util.Hashtable, org.testng.ITestContext)[pri:0, instance:TestCases.Customer_Update@7b84fcf8]" name="invalid_customer_update" duration-ms="1" started-at="2021-04-06T15:13:54Z" data-provider="dp" finished-at="2021-04-06T15:13:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{referralCode=, expectedErrorCode=400, referredBy=, occupationTypeCode=SELF, middleName=Bhardwaj, email=, expectedMessage=First Name is mandatory, gender=F, dob=1983-10-26, firstName=, lastName=, endpoint=qa/customer/api/v1/user/update}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[wrong number of arguments]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: wrong number of arguments
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.retryFailed(Invoker.java:1014)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1215)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalid_customer_update -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestCases.Customer_Update@7b84fcf8]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2021-04-06T15:13:54Z" finished-at="2021-04-06T15:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:TestCases.Customer_Update@7b84fcf8]" name="afterMethod" is-config="true" duration-ms="25" started-at="2021-04-06T15:13:54Z" finished-at="2021-04-06T15:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestCases.Customer_Update@7b84fcf8]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2021-04-06T15:13:54Z" finished-at="2021-04-06T15:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="invalid_customer_update(java.util.Hashtable, org.testng.ITestContext)[pri:0, instance:TestCases.Customer_Update@7b84fcf8]" name="invalid_customer_update" duration-ms="1" started-at="2021-04-06T15:13:54Z" data-provider="dp" finished-at="2021-04-06T15:13:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{referralCode=, expectedErrorCode=400, referredBy=, occupationTypeCode=SELF, middleName=Bhardwaj, email=, expectedMessage=First Name is mandatory, gender=F, dob=1983-10-26, firstName=, lastName=, endpoint=qa/customer/api/v1/user/update}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[wrong number of arguments]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: wrong number of arguments
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.retryFailed(Invoker.java:1014)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1215)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalid_customer_update -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:TestCases.Customer_Update@7b84fcf8]" name="afterMethod" is-config="true" duration-ms="29" started-at="2021-04-06T15:13:54Z" finished-at="2021-04-06T15:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="FAIL" signature="invalid_customer_update(java.util.Hashtable, org.testng.ITestContext)[pri:0, instance:TestCases.Customer_Update@7b84fcf8]" name="invalid_customer_update" duration-ms="429" started-at="2021-04-06T15:13:54Z" data-provider="dp" finished-at="2021-04-06T15:13:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{referralCode=, expectedErrorCode=400, referredBy=, occupationTypeCode=SELF, middleName=Bhardwaj, email=, expectedMessage=JSON parse error: Cannot deserialize value of type `java.time.LocalDate` from String "26-10-1983": Failed to deserialize java.time.LocalDate: (java.time.format.DateTimeParseException) Text '26-10-1983' could not be parsed at index 0; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.time.LocalDate` from String "26-10-1983": Failed to deserialize java.time.LocalDate: (java.time.format.DateTimeParseException) Text '26-10-1983' could not be parsed at index 0, gender=F, dob=26-10-1983, firstName=Kamini, lastName=, endpoint=qa/customer/api/v1/user/update}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@7dee835]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
	at com.MSIL.TestUtils.Verify_Response.verify_Response_data_1(Verify_Response.java:65)
	at com.MSIL.API_LISTS.Cust_Regsiration_API.customer_update_API(Cust_Regsiration_API.java:62)
	at TestCases.Customer_Update.invalid_customer_update(Customer_Update.java:32)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalid_customer_update -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestCases.Customer_Update@7b84fcf8]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2021-04-06T15:13:54Z" finished-at="2021-04-06T15:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:TestCases.Customer_Update@7b84fcf8]" name="afterMethod" is-config="true" duration-ms="29" started-at="2021-04-06T15:13:54Z" finished-at="2021-04-06T15:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestCases.Customer_Update@7b84fcf8]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2021-04-06T15:13:54Z" finished-at="2021-04-06T15:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="invalid_customer_update(java.util.Hashtable, org.testng.ITestContext)[pri:0, instance:TestCases.Customer_Update@7b84fcf8]" name="invalid_customer_update" duration-ms="1" started-at="2021-04-06T15:13:54Z" data-provider="dp" finished-at="2021-04-06T15:13:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{referralCode=, expectedErrorCode=400, referredBy=, occupationTypeCode=SELF, middleName=Bhardwaj, email=, expectedMessage=JSON parse error: Cannot deserialize value of type `java.time.LocalDate` from String "26-10-1983": Failed to deserialize java.time.LocalDate: (java.time.format.DateTimeParseException) Text '26-10-1983' could not be parsed at index 0; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.time.LocalDate` from String "26-10-1983": Failed to deserialize java.time.LocalDate: (java.time.format.DateTimeParseException) Text '26-10-1983' could not be parsed at index 0, gender=F, dob=26-10-1983, firstName=Kamini, lastName=, endpoint=qa/customer/api/v1/user/update}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[wrong number of arguments]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: wrong number of arguments
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.retryFailed(Invoker.java:1014)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1215)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalid_customer_update -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:TestCases.Customer_Update@7b84fcf8]" name="afterMethod" is-config="true" duration-ms="41" started-at="2021-04-06T15:13:54Z" finished-at="2021-04-06T15:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestCases.Customer_Update@7b84fcf8]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2021-04-06T15:13:54Z" finished-at="2021-04-06T15:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="invalid_customer_update(java.util.Hashtable, org.testng.ITestContext)[pri:0, instance:TestCases.Customer_Update@7b84fcf8]" name="invalid_customer_update" duration-ms="757" started-at="2021-04-06T15:13:54Z" data-provider="dp" finished-at="2021-04-06T15:13:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{referralCode=, expectedErrorCode=400, referredBy=, occupationTypeCode=ABC, middleName=Bhardwaj, email=, expectedMessage=Occupation type does not exist for given code, gender=F, dob=1983-10-26, firstName=Kamini, lastName=, endpoint=qa/customer/api/v1/user/update}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@7dee835]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
	at com.MSIL.TestUtils.Verify_Response.verify_Response_data_1(Verify_Response.java:65)
	at com.MSIL.API_LISTS.Cust_Regsiration_API.customer_update_API(Cust_Regsiration_API.java:62)
	at TestCases.Customer_Update.invalid_customer_update(Customer_Update.java:32)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalid_customer_update -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:TestCases.Customer_Update@7b84fcf8]" name="afterMethod" is-config="true" duration-ms="29" started-at="2021-04-06T15:13:55Z" finished-at="2021-04-06T15:13:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestCases.Customer_Update@7b84fcf8]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2021-04-06T15:13:55Z" finished-at="2021-04-06T15:13:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="invalid_customer_update(java.util.Hashtable, org.testng.ITestContext)[pri:0, instance:TestCases.Customer_Update@7b84fcf8]" name="invalid_customer_update" duration-ms="1" started-at="2021-04-06T15:13:55Z" data-provider="dp" finished-at="2021-04-06T15:13:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{referralCode=, expectedErrorCode=400, referredBy=, occupationTypeCode=ABC, middleName=Bhardwaj, email=, expectedMessage=Occupation type does not exist for given code, gender=F, dob=1983-10-26, firstName=Kamini, lastName=, endpoint=qa/customer/api/v1/user/update}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[wrong number of arguments]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: wrong number of arguments
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.retryFailed(Invoker.java:1014)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1215)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalid_customer_update -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:TestCases.Customer_Update@7b84fcf8]" name="afterMethod" is-config="true" duration-ms="37" started-at="2021-04-06T15:13:55Z" finished-at="2021-04-06T15:13:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- TestCases.Customer_Update -->
      <class name="TestCases.Model_Hero_Image_API_TC">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestCases.Model_Hero_Image_API_TC@1477089c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2021-04-06T15:15:13Z" finished-at="2021-04-06T15:15:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforClass()[pri:0, instance:TestCases.Model_Hero_Image_API_TC@1477089c]" name="beforClass" is-config="true" duration-ms="0" started-at="2021-04-06T15:15:13Z" finished-at="2021-04-06T15:15:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforClass -->
        <test-method status="SKIP" signature="car_basison_ranking(java.util.Hashtable, org.testng.ITestContext)[pri:0, instance:TestCases.Model_Hero_Image_API_TC@1477089c]" name="car_basison_ranking" duration-ms="962" started-at="2021-04-06T15:15:13Z" data-provider="dp" finished-at="2021-04-06T15:15:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{expectedMessage=, expectedErrorCode=200.0, endpoint=qa/api/subscribe/vehicle/model/1?resolution=hdpi}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@7dee835]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [baleno_back] but found [Cars]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [baleno_back] but found [Cars]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at org.testng.Assert.assertEquals(Assert.java:189)
	at org.testng.Assert.assertEquals(Assert.java:199)
	at com.MSIL.Response.Verify_Response_Hero_Image.verify_Response(Verify_Response_Hero_Image.java:43)
	at com.MSIL.API_LISTS.Car_Price_On_Ranking.hero_image(Car_Price_On_Ranking.java:69)
	at TestCases.Model_Hero_Image_API_TC.car_basison_ranking(Model_Hero_Image_API_TC.java:22)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- car_basison_ranking -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:TestCases.Model_Hero_Image_API_TC@1477089c]" name="afterMethod" is-config="true" duration-ms="30" started-at="2021-04-06T15:15:14Z" finished-at="2021-04-06T15:15:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestCases.Model_Hero_Image_API_TC@1477089c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2021-04-06T15:15:14Z" finished-at="2021-04-06T15:15:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="car_basison_ranking(java.util.Hashtable, org.testng.ITestContext)[pri:0, instance:TestCases.Model_Hero_Image_API_TC@1477089c]" name="car_basison_ranking" duration-ms="1" started-at="2021-04-06T15:15:14Z" data-provider="dp" finished-at="2021-04-06T15:15:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{expectedMessage=, expectedErrorCode=200.0, endpoint=qa/api/subscribe/vehicle/model/1?resolution=hdpi}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[wrong number of arguments]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: wrong number of arguments
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.retryFailed(Invoker.java:1014)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1215)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- car_basison_ranking -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:TestCases.Model_Hero_Image_API_TC@1477089c]" name="afterMethod" is-config="true" duration-ms="24" started-at="2021-04-06T15:15:14Z" finished-at="2021-04-06T15:15:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestCases.Model_Hero_Image_API_TC@1477089c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2021-04-06T15:15:14Z" finished-at="2021-04-06T15:15:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="car_basison_ranking(java.util.Hashtable, org.testng.ITestContext)[pri:0, instance:TestCases.Model_Hero_Image_API_TC@1477089c]" name="car_basison_ranking" duration-ms="1" started-at="2021-04-06T15:15:14Z" data-provider="dp" finished-at="2021-04-06T15:15:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{expectedMessage=, expectedErrorCode=200.0, endpoint=qa/api/subscribe/vehicle/model/1?resolution=hdpi}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[wrong number of arguments]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: wrong number of arguments
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.retryFailed(Invoker.java:1014)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1215)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- car_basison_ranking -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:TestCases.Model_Hero_Image_API_TC@1477089c]" name="afterMethod" is-config="true" duration-ms="24" started-at="2021-04-06T15:15:14Z" finished-at="2021-04-06T15:15:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- TestCases.Model_Hero_Image_API_TC -->
      <class name="TestCases.GetCustomerByUUIDAndOccupationId">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestCases.GetCustomerByUUIDAndOccupationId@10b9db7b]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2021-04-06T15:15:23Z" finished-at="2021-04-06T15:15:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforClass()[pri:0, instance:TestCases.GetCustomerByUUIDAndOccupationId@10b9db7b]" name="beforClass" is-config="true" duration-ms="0" started-at="2021-04-06T15:15:23Z" finished-at="2021-04-06T15:15:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforClass -->
        <test-method status="PASS" signature="get_customer_occupation_UUID_ID(java.util.Hashtable, org.testng.ITestContext)[pri:0, instance:TestCases.GetCustomerByUUIDAndOccupationId@10b9db7b]" name="get_customer_occupation_UUID_ID" duration-ms="980" started-at="2021-04-06T15:15:23Z" data-provider="dp" finished-at="2021-04-06T15:15:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{expectedMessage=, expectedErrorCode=201, endpoint=qa/customer/api/v1}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@7dee835]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- get_customer_occupation_UUID_ID -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:TestCases.GetCustomerByUUIDAndOccupationId@10b9db7b]" name="afterMethod" is-config="true" duration-ms="29" started-at="2021-04-06T15:15:24Z" finished-at="2021-04-06T15:15:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- TestCases.GetCustomerByUUIDAndOccupationId -->
      <class name="TestCases.UpdateCustomerAddress">
        <test-method status="PASS" signature="beforClass()[pri:0, instance:TestCases.UpdateCustomerAddress@59d2400d]" name="beforClass" is-config="true" duration-ms="0" started-at="2021-04-06T15:15:18Z" finished-at="2021-04-06T15:15:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestCases.UpdateCustomerAddress@59d2400d]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2021-04-06T15:15:18Z" finished-at="2021-04-06T15:15:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="update_customer_address(java.util.Hashtable, org.testng.ITestContext)[pri:0, instance:TestCases.UpdateCustomerAddress@59d2400d]" name="update_customer_address" duration-ms="1112" started-at="2021-04-06T15:15:18Z" data-provider="dp" finished-at="2021-04-06T15:15:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{addressLine3=behind batta, addressLine2=vikranth shastri marg1, addressLine1=H.no-2, addressType=WORK, addressCategory=BILLING, state=UP, endpoint=/qa/customer/api/v1/customer-address, expectedMessage=Address updated successfully, gstNumber=gst09875456789, longitude=76.3, pincode=767, expectedErrorCode=200, dmsCityCode=ND, latitude=23.90, id=1, city=Noida, area=gandhi road, standard=true, cibilStateCode=CUP}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@7dee835]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- update_customer_address -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:TestCases.UpdateCustomerAddress@59d2400d]" name="afterMethod" is-config="true" duration-ms="27" started-at="2021-04-06T15:15:20Z" finished-at="2021-04-06T15:15:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- TestCases.UpdateCustomerAddress -->
      <class name="TestCases.verify_vehicle_List_TC">
        <test-method status="PASS" signature="beforClass()[pri:0, instance:TestCases.verify_vehicle_List_TC@6ee660fb]" name="beforClass" is-config="true" duration-ms="0" started-at="2021-04-06T15:15:27Z" finished-at="2021-04-06T15:15:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestCases.verify_vehicle_List_TC@6ee660fb]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2021-04-06T15:15:27Z" finished-at="2021-04-06T15:15:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verify_list(java.util.Hashtable, org.testng.ITestContext)[pri:0, instance:TestCases.verify_vehicle_List_TC@6ee660fb]" name="verify_list" duration-ms="1328" started-at="2021-04-06T15:15:27Z" data-provider="dp" finished-at="2021-04-06T15:15:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{channelType=, filterSortOnPostGST=true, variantCode=, toPrice=null, popularity=ASC, startDate=null, mileageCode=null, leasingCompCode=null, endpoint=qa/api/subscribe/vehicle/v2/list, fuelType=, expectedErrorCode=200, bodyType=, fromPrice=null, modelCode=SR, forCode=null, tenureId=, resolution=xxhdpi, price=DESC, cityId=8, categoryIds=, transmissionType=, registrationType=BLACK_PLATE, isNew=true, newAddition=ASC, colorType=}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@7dee835]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_list -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:TestCases.verify_vehicle_List_TC@6ee660fb]" name="afterMethod" is-config="true" duration-ms="26" started-at="2021-04-06T15:15:28Z" finished-at="2021-04-06T15:15:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="verify_list_city_invalid(java.util.Hashtable, org.testng.ITestContext)[pri:0, instance:TestCases.verify_vehicle_List_TC@6ee660fb]" name="verify_list_city_invalid" duration-ms="1362" started-at="2021-04-06T15:15:28Z" data-provider="dp" finished-at="2021-04-06T15:15:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{channelType=, filterSortOnPostGST=true, variantCode=, toPrice=null, popularity=ASC, startDate=null, endpoint=qa/api/subscribe/vehicle/v2/list, fuelType=, expectedErrorCode=, bodyType=, fromPrice=null, modelCode=SR, tenureId=, resolution=xxhdpi, price=DESC, cityId=, categoryIds=5, transmissionType=, registrationType=BLACK_PLATE, isNew=true, newAddition=ASC, colorType=}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@7dee835]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_list_city_invalid -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestCases.verify_vehicle_List_TC@6ee660fb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2021-04-06T15:15:28Z" finished-at="2021-04-06T15:15:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:TestCases.verify_vehicle_List_TC@6ee660fb]" name="afterMethod" is-config="true" duration-ms="29" started-at="2021-04-06T15:15:29Z" finished-at="2021-04-06T15:15:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- TestCases.verify_vehicle_List_TC -->
      <class name="TestCases.GetCustomerOccupationById">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestCases.GetCustomerOccupationById@5b202a3a]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2021-04-06T15:15:22Z" finished-at="2021-04-06T15:15:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="get_customer_occupation(java.util.Hashtable, org.testng.ITestContext)[pri:0, instance:TestCases.GetCustomerOccupationById@5b202a3a]" name="get_customer_occupation" duration-ms="1439" started-at="2021-04-06T15:15:22Z" data-provider="dp" finished-at="2021-04-06T15:15:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{expectedMessage=, expectedErrorCode=201, endpoint=qa/customer/api/v1/employment}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@7dee835]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- get_customer_occupation -->
        <test-method status="PASS" signature="beforClass()[pri:0, instance:TestCases.GetCustomerOccupationById@5b202a3a]" name="beforClass" is-config="true" duration-ms="0" started-at="2021-04-06T15:15:22Z" finished-at="2021-04-06T15:15:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforClass -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:TestCases.GetCustomerOccupationById@5b202a3a]" name="afterMethod" is-config="true" duration-ms="39" started-at="2021-04-06T15:15:23Z" finished-at="2021-04-06T15:15:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- TestCases.GetCustomerOccupationById -->
      <class name="TestCases.City_Master_API_TC">
        <test-method status="PASS" signature="city_master(java.util.Hashtable, org.testng.ITestContext)[pri:0, instance:TestCases.City_Master_API_TC@6ad59d92]" name="city_master" duration-ms="1641" started-at="2021-04-06T15:15:07Z" data-provider="dp" finished-at="2021-04-06T15:15:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{isNew=true, currentDate=null, expectedMessage=, expectedErrorCode=200, regType=WHITE_PLATE, isFuture=false, endpoint=qa/api/common/city-list, cityId=1}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@7dee835]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- city_master -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestCases.City_Master_API_TC@6ad59d92]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2021-04-06T15:15:07Z" finished-at="2021-04-06T15:15:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforClass()[pri:0, instance:TestCases.City_Master_API_TC@6ad59d92]" name="beforClass" is-config="true" duration-ms="0" started-at="2021-04-06T15:15:07Z" finished-at="2021-04-06T15:15:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforClass -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:TestCases.City_Master_API_TC@6ad59d92]" name="afterMethod" is-config="true" duration-ms="23" started-at="2021-04-06T15:15:08Z" finished-at="2021-04-06T15:15:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- TestCases.City_Master_API_TC -->
      <class name="TestCases.Get_Customer_Detail_BY_UUID">
        <test-method status="PASS" signature="beforClass()[pri:0, instance:TestCases.Get_Customer_Detail_BY_UUID@56f0cc85]" name="beforClass" is-config="true" duration-ms="0" started-at="2021-04-06T15:15:08Z" finished-at="2021-04-06T15:15:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestCases.Get_Customer_Detail_BY_UUID@56f0cc85]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2021-04-06T15:15:08Z" finished-at="2021-04-06T15:15:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="get_customer_detail_uuid(java.util.Hashtable, org.testng.ITestContext)[pri:0, instance:TestCases.Get_Customer_Detail_BY_UUID@56f0cc85]" name="get_customer_detail_uuid" duration-ms="520" started-at="2021-04-06T15:15:08Z" data-provider="dp" finished-at="2021-04-06T15:15:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{expectedMessage=, expectedErrorCode=200, endpoint=qa/customer/api/v1/user/details/:uuid=d9b97efd-69b7-4e6b-8d10-f4b96a81d9ed}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@7dee835]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [200] but found [403]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [200] but found [403]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at org.testng.Assert.assertEquals(Assert.java:388)
	at org.testng.Assert.assertEquals(Assert.java:398)
	at com.MSIL.API_LISTS.Cust_Regsiration_API.get_customer_details_uuid_API(Cust_Regsiration_API.java:108)
	at TestCases.Get_Customer_Detail_BY_UUID.get_customer_detail_uuid(Get_Customer_Detail_BY_UUID.java:21)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- get_customer_detail_uuid -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:TestCases.Get_Customer_Detail_BY_UUID@56f0cc85]" name="afterMethod" is-config="true" duration-ms="27" started-at="2021-04-06T15:15:09Z" finished-at="2021-04-06T15:15:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="get_customer_detail_uuid(java.util.Hashtable, org.testng.ITestContext)[pri:0, instance:TestCases.Get_Customer_Detail_BY_UUID@56f0cc85]" name="get_customer_detail_uuid" duration-ms="1" started-at="2021-04-06T15:15:09Z" data-provider="dp" finished-at="2021-04-06T15:15:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{expectedMessage=, expectedErrorCode=200, endpoint=qa/customer/api/v1/user/details/:uuid=d9b97efd-69b7-4e6b-8d10-f4b96a81d9ed}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[wrong number of arguments]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: wrong number of arguments
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.retryFailed(Invoker.java:1014)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1215)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- get_customer_detail_uuid -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestCases.Get_Customer_Detail_BY_UUID@56f0cc85]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2021-04-06T15:15:09Z" finished-at="2021-04-06T15:15:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:TestCases.Get_Customer_Detail_BY_UUID@56f0cc85]" name="afterMethod" is-config="true" duration-ms="28" started-at="2021-04-06T15:15:09Z" finished-at="2021-04-06T15:15:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="FAIL" signature="get_customer_detail_uuid(java.util.Hashtable, org.testng.ITestContext)[pri:0, instance:TestCases.Get_Customer_Detail_BY_UUID@56f0cc85]" name="get_customer_detail_uuid" duration-ms="2" started-at="2021-04-06T15:15:09Z" data-provider="dp" finished-at="2021-04-06T15:15:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{expectedMessage=, expectedErrorCode=200, endpoint=qa/customer/api/v1/user/details/:uuid=d9b97efd-69b7-4e6b-8d10-f4b96a81d9ed}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[wrong number of arguments]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: wrong number of arguments
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.retryFailed(Invoker.java:1014)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1215)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- get_customer_detail_uuid -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestCases.Get_Customer_Detail_BY_UUID@56f0cc85]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2021-04-06T15:15:09Z" finished-at="2021-04-06T15:15:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:TestCases.Get_Customer_Detail_BY_UUID@56f0cc85]" name="afterMethod" is-config="true" duration-ms="33" started-at="2021-04-06T15:15:09Z" finished-at="2021-04-06T15:15:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- TestCases.Get_Customer_Detail_BY_UUID -->
      <class name="TestCases.Car_Model_Ranking">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestCases.Car_Model_Ranking@62e20a76]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2021-04-06T15:15:09Z" finished-at="2021-04-06T15:15:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforClass()[pri:0, instance:TestCases.Car_Model_Ranking@62e20a76]" name="beforClass" is-config="true" duration-ms="0" started-at="2021-04-06T15:15:09Z" finished-at="2021-04-06T15:15:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforClass -->
        <test-method status="SKIP" signature="car_basison_ranking(java.util.Hashtable, org.testng.ITestContext)[pri:0, instance:TestCases.Car_Model_Ranking@62e20a76]" name="car_basison_ranking" duration-ms="1130" started-at="2021-04-06T15:15:09Z" data-provider="dp" finished-at="2021-04-06T15:15:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{expectedMessage=, expectedErrorCode=200.0, endpoint=qa/api/subscribe/vehicle/model/1?resolution=hdpi}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@7dee835]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [14016.0] but found [15663.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [14016.0] but found [15663.0]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at org.testng.Assert.assertEquals(Assert.java:178)
	at com.MSIL.Response.Model_Ranking_response.verify_Response(Model_Ranking_response.java:37)
	at com.MSIL.API_LISTS.Car_Price_On_Ranking.car_price_on_ranking_API(Car_Price_On_Ranking.java:39)
	at TestCases.Car_Model_Ranking.car_basison_ranking(Car_Model_Ranking.java:19)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- car_basison_ranking -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:TestCases.Car_Model_Ranking@62e20a76]" name="afterMethod" is-config="true" duration-ms="25" started-at="2021-04-06T15:15:10Z" finished-at="2021-04-06T15:15:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="car_basison_ranking(java.util.Hashtable, org.testng.ITestContext)[pri:0, instance:TestCases.Car_Model_Ranking@62e20a76]" name="car_basison_ranking" duration-ms="1" started-at="2021-04-06T15:15:10Z" data-provider="dp" finished-at="2021-04-06T15:15:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{expectedMessage=, expectedErrorCode=200.0, endpoint=qa/api/subscribe/vehicle/model/1?resolution=hdpi}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[wrong number of arguments]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: wrong number of arguments
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.retryFailed(Invoker.java:1014)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1215)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- car_basison_ranking -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestCases.Car_Model_Ranking@62e20a76]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2021-04-06T15:15:10Z" finished-at="2021-04-06T15:15:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:TestCases.Car_Model_Ranking@62e20a76]" name="afterMethod" is-config="true" duration-ms="23" started-at="2021-04-06T15:15:10Z" finished-at="2021-04-06T15:15:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="FAIL" signature="car_basison_ranking(java.util.Hashtable, org.testng.ITestContext)[pri:0, instance:TestCases.Car_Model_Ranking@62e20a76]" name="car_basison_ranking" duration-ms="0" started-at="2021-04-06T15:15:10Z" data-provider="dp" finished-at="2021-04-06T15:15:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{expectedMessage=, expectedErrorCode=200.0, endpoint=qa/api/subscribe/vehicle/model/1?resolution=hdpi}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[wrong number of arguments]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: wrong number of arguments
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.retryFailed(Invoker.java:1014)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1215)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- car_basison_ranking -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestCases.Car_Model_Ranking@62e20a76]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2021-04-06T15:15:10Z" finished-at="2021-04-06T15:15:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:TestCases.Car_Model_Ranking@62e20a76]" name="afterMethod" is-config="true" duration-ms="41" started-at="2021-04-06T15:15:10Z" finished-at="2021-04-06T15:15:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- TestCases.Car_Model_Ranking -->
      <class name="TestCases.Customer_Register_Cognito">
        <test-method status="PASS" signature="beforClass()[pri:0, instance:TestCases.Customer_Register_Cognito@1b73be9f]" name="beforClass" is-config="true" duration-ms="0" started-at="2021-04-06T15:13:12Z" finished-at="2021-04-06T15:13:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestCases.Customer_Register_Cognito@1b73be9f]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2021-04-06T15:13:12Z" finished-at="2021-04-06T15:13:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="customer_register_cognito(java.util.Hashtable, org.testng.ITestContext)[pri:0, instance:TestCases.Customer_Register_Cognito@1b73be9f]" name="customer_register_cognito" duration-ms="19491" started-at="2021-04-06T15:13:12Z" data-provider="dp" finished-at="2021-04-06T15:13:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{uuid=, mobile=1, businessType=SUBSCRIBE, referralCode=, expectedErrorCode=200, referredBy=, occupationTypeCode=, middleName=Kumar, email=gurender.kush@nagarro.com, expectedMessage=Customer successfully registered, gender=M, dob=1983-10-26, firstName=Gurender, lastName=Kush, endpoint=qa/customer/api/v1/user/register}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@7dee835]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- customer_register_cognito -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:TestCases.Customer_Register_Cognito@1b73be9f]" name="afterMethod" is-config="true" duration-ms="68" started-at="2021-04-06T15:13:32Z" finished-at="2021-04-06T15:13:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- TestCases.Customer_Register_Cognito -->
    </test> <!-- API Test -->
  </suite> <!-- Suite -->
</testng-results>
